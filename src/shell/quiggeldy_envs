#!/bin/bash

set -euo pipefail

help() {
	echo 'Prints export commands to set quiggedly environments for all running quiggeldy services.'
	echo 'Optionally takes service name as positional argument to only print the commands for that service if it exists.'
	echo 'Example usage to directly apply to environment: eval $(quiggeldy_envs ebrains_experimental)'
}

if [[ $# -gt 1 ]]
then
	echo -e "ERROR: Only one positional argument expected\n"
	help
	exit 1
fi
if [[ $# -eq 1 ]] && ([[ $1 == "help" ]] ||  [[ $1 == "--help" ]]); then
	help
	exit 0
fi

for SERVICE_NAME in $(systemctl list-units | grep quiggeldy@ | awk '{print $1;}'); do
	# if positional argument is given check if service name contains requested string
	SHORTNAME=${SERVICE_NAME:10}
	SHORTNAME=${SHORTNAME::-8}
	if [[ $# -eq 0 ]] || [[ $SHORTNAME == "$1" ]]; then
		PORT=$(systemctl status "$SERVICE_NAME" | grep -m 1 tcp)
		PORT=${PORT#*Host??}
		if [[ $# -eq 0 ]]; then
			echo -e "\n$SHORTNAME"
		fi
		echo -e "export QUIGGELDY_IP=$(hostname); export QUIGGELDY_PORT=$PORT; export QUIGGELDY_USER_NO_MUNGE=$USER; export QUIGGELDY_ENABLED=1"
		FOUND_SERVICE=true
	fi
done

if [[ $# -eq 1 ]] && [[ -z ${FOUND_SERVICE+x} ]]; then
	echo "ERROR: No service with name $1 found"
	exit 1
fi
